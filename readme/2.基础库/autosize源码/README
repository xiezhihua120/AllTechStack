A low-cost Android screen adaptation solution (今日头条屏幕适配方案终极版，一个极低成本的 Android 屏幕适配方案).
源码地址：https://github.com/JessYanCoding/AndroidAutoSize

设计稿      ->      逻辑尺寸      ->      真实设备
                    布局


核心逻辑：代码和布局中应用逻辑尺寸，sdk将逻辑尺寸适配到真实尺寸。其中逻辑尺寸、设计稿尺寸一直，那么开发就不用做转化操作了。
1、配置尺寸
2、获取目标尺寸
3、应用尺寸


计算原理：
Density-independent pixel (dp)独立像素密度。标准是160dip.即1dp对应1个pixel，计算公式如：px = dp * (dpi / 160)，屏幕密度越大，1dp对应 的像素点越多。
上面的公式中有个dpi，dpi为DPI是Dots Per Inch（每英寸所打印的点数），也就是当设备的dpi为160的时候1px=1dp；
定义一：实际像素 / 逻辑像素
定义二：每英寸像素点个数 / 160

参考：
Android屏幕适配及DisplayMetrics解析：https://blog.csdn.net/hp910315/article/details/48501197
Android 屏幕适配方案：https://blog.csdn.net/lmj623565791/article/details/45460089

----------------------------------------------------------------------------------------------------

Why：
屏幕适配问题：从设计稿尺寸，到代码布局中的逻辑尺寸，再到真实设备尺寸，其中的元素或布局的尺寸存在一个转化关系。
核心的问题是说，能不能一个设计稿尺寸，只用开发一种代码布局尺寸，适配所有的真实设备。
实际情况并不是的，设计稿中有Android和iOS尺寸、开发中例如Android有各种dpi尺寸、设备的尺寸是五花八门。
能不能参考前端，做一种一个设计稿尺寸，在设备上按比例缩放的方案？

What：
一个极低成本的 Android 屏幕适配方案，本质是就是一个将设计稿与代码逻辑尺寸统一，按一定比例和逻辑缩放到真实设备上的方案

How：
核心做法是：
1、获取配置的尺寸  （metadata中）

2、获取设备的尺寸   (screen)
   比例关系在1、2中确定好，然后根据转化逻辑：px = dp * （dpi / 160）进行计算，得到真正的density = dpi / 160
   说白了就是 设计稿的尺寸，到设备的尺寸之间的转化比例，设置到系统中

3、应用尺寸 （设置Activity的DisplayMetrics）
   在Activity每次

----------------------------------------------------------------------------------------------------
