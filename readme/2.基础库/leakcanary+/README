官网地址: https://square.github.io/leakcanary/

相关资料
Android内存泄露检测之LeakCanary的使用
https://www.jianshu.com/p/a5e69a2e093f

LeakCanary2.0使用及原理分析 — Kotlin重构版
https://www.jianshu.com/p/3b429c38e73e

Why
当一个系统中的对象占有着资源，但是又不能创造价值时，应该及时的将其清理掉，以保证系统良性的运转。
内存泄漏：一个对象占用了内存资源，当系统不再需要它时，却被保留在系统中无法释放
内存溢出：多个对象发生内存泄漏时，导致系统的内存资源紧张，无法为系统进行新的生产工作进行资源的分配，导致系统运行崩溃

What
Android软件内的内存泄漏检测工具（系统、对象、内存资源、保留与释放）


How
核心原理：如果一个弱引用对象被ObjectWatcher持有，且在持有之后的5s没有被垃圾回收器回收，那么LeakCanary认为这个对象可能是泄漏了
1、监控告警策略：在前台时如果有5个retained对象，即发出告警；在后台时如果有1个retained对象，即发出通知告警
2、打印heap信息：再要进行告警之前，先将java堆栈信息打印，并存储到.hprof文件中
3、分析.hprof文件：使用Shark工具分析.hprof文件，并找出retained对象、泄漏路径